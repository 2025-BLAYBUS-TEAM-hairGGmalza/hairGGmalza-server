name: CI/CD for Spring Boot

on:
  workflow_run:
    workflows: ["tag-push.yml"]  # 이전 워크플로우 이름
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 코드 가져오기
        uses: actions/checkout@v4

      - name: Set the tag name from previous workflow
        run: echo "TAG_NAME=${{ needs.tag_push.outputs.tag_name }}" >> $GITHUB_ENV  # 태그 이름을 환경 변수로 설정

      - name: JDK 21 설정
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Gradle 빌드 실행 (JAR 생성)
        run: ./gradlew build -x test
        working-directory: hairgg  # Gradle이 있는 디렉터리 지정

      - name: JAR 파일 EC2에 전송
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "hairgg/build/libs/hairgg-0.0.1-SNAPSHOT.jar"  # 정확한 파일 경로 지정
          target: "~/jar-file/"

      - name: 파일을 ~/app-{TAG_NAME}.jar로 이동
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "TAG_NAME: $TAG_NAME"
            mv ~/jar-file/hairgg/build/libs/hairgg-0.0.1-SNAPSHOT.jar ~/app-${TAG_NAME}.jar

      # - name: Docker Compose 실행 (EC2 내부)
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.EC2_HOST }}
      #     username: ${{ secrets.EC2_USER }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     script: |
      #       cd ~
      #       docker-compose down
      #       docker-compose up --build -d

      # - name: 배포 성공 Discord 알림 전송
      #   uses: Ilshidur/action-discord@master
      #   with:
      #     webhook: ${{ secrets.DISCORD_WEBHOOK }}
      #     message: "✅ Spring Boot 배포 성공 🚀"
